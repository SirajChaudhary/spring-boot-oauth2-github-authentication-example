# =======================
# Application Info
# =======================
spring.application.name=spring-boot-oauth2-github-authentication-example
server.port=8080

# =======================
# GitHub OAuth2 Setup
# =======================
# Steps to get client-id and client-secret:
# 1. Go to https://github.com/settings/developers
# 2. Under "OAuth Apps", click "New OAuth App"
# 3. Fill in the following fields:
#    Application Name: Spring Boot GitHub OAuth2 Example
#    Homepage URL: http://localhost:8080
#    Authorization Callback URL: http://localhost:8080/login/oauth2/code/github
# 4. Click "Register application"
# 5. Copy the Client ID and Client Secret and paste below

spring.security.oauth2.client.registration.github.client-id=Ov23licnilFdL6P5G6Fv
spring.security.oauth2.client.registration.github.client-secret=2043ad47e9ba60dcaec5c9396ceb13864053c934
spring.security.oauth2.client.registration.github.scope=read:user,user:email
spring.security.oauth2.client.registration.github.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}

spring.security.oauth2.client.provider.github.authorization-uri=https://github.com/login/oauth/authorize
spring.security.oauth2.client.provider.github.token-uri=https://github.com/login/oauth/access_token
spring.security.oauth2.client.provider.github.user-info-uri=https://api.github.com/user
spring.security.oauth2.client.provider.github.user-name-attribute=id

# =======================
# Notes
# =======================
# GitHub does not issue JWTs directly. 
# In this demo, after OAuth2 login we issue our own JWT to access /api/v1/** endpoints.
